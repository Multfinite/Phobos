[General]
SharedSensors=false ; boolean

[CloakTypes]
0=CT_0
1=CT_1

[CT_0]
; Type=Cloak ; Cloak | Virtual | Disguise | Mirage?
InMovement=true ; boolean
Shadow=false ; boolean
Warn=true ; 
Warn.Eva= ; define special sound for this type
Warn.Eva.Side._side_=
Warn.Eva.Country._country_=

[TECHNO_CLOAKED]
Cloak.Type=CT_0 ; cloak type
Cloak.Radius=0 ; int, cells 0 - affect only self
Cloak.Shadow=false ; boolean - is it should be shadown drawn?
Cloak.Warn=false ; redefine warning type for this unit
Cloak.Warn.Eva= ; redefine special sound for this type
Cloak.Warn.Eva.Side._side_=
Cloak.Warn.Eva.Country._country_=

[TECHNO_UNCLOAKABLE]
Cloak.ForbiddenTypes=CT_0,CT_1

[SensorTypes]
0=ST_0
1=ST_1

[ST_0]
Senses=CT_0,CT_1 ; list of CloakType to be sensored (empty - ALL ALLOWED)
Mode=Default ; SensorShareMode Default | Shared | Private
Air.Detect=true ; boolean
Air.Track=false ; boolean
Air.Decloak=false ; boolean
Air.Display=false ; boolean
Air.Weapon= ; weapon type to be applied to any sensed target
Ground.Detect=true ; boolean
Ground.Track=false ; boolean
Ground.Decloak=false ; boolean
Ground.Display=false ; boolean
Ground.Weapon= ; weapon type to be applied to any sensed target
Subterannean.Detect=true ; boolean
Subterannean.Track=false ; boolean
Subterannean.Decloak=false ; boolean
Subterannean.Display=false ; boolean
Subterannean.Weapon= ; weapon type to be applied to any sensed target
ForceShadows=false ; boolean
InMovement=true ; boolean Is it can scan during movement?
Animation= ; Animation
Delay=0 ; (int, frames) rest of scan - time between two scans
Duration=0 ; (int, frames) active time of scan
CellIncrement=0 ; (int) how many cells will be added at each `Duration` time reach and total scan duration is `Duration`*`Max(Sensor.Sights of type/CellIncrement)`. value 0> will activate this logic.
Warn=false ; boolean warn if this sensor detect something
Warn.Eva=false ; redefine default warning sound
Warn.Eva.Side._side_=
Warn.Eva.Country._country_=

[TECHNO_SENSOR]
Sensor.Types=ST_0,ST_1 ; list of SensorType to use as sensor
Sensor.Radiuses=10,11 ; list of SensorSight for each SensorType
Sensor.Durations=0,0 ; int[] frames, time when affacted cloaks can recloak after leaving zone of sensor
Sensor.Lifetimes=-1,-1 ; lifetime of this sensor

[PROJECTILE_SENSOR]
Sensor.Types=
Sensor.Radiuses=
Sensor.Durations=
Sensor.Lifetimes=

[WARHEAD_SENSOR]
Sensor.Types=
Sensor.Radiuses=
Sensor.Durations=
Sensor.Lifetimes=

[EWTypes]
0=EWT_0
1=EWT_1

[EWT_0]
Weapon=

; NEED TO RESTORE SENSOR WHICH WAS AFFECTED BY 
; EW.Duration=-1 (Always) supressors (BTW - restore even any suppresion presents)
[TECHNO_SENSOR_SUPRESSOR]
EW.Types=ST_0,ST_1
EW.Targets= ; Modes[] Area (only cells) | Sensors (on parents) | All (Area and Sensors)
EW.Radiuses=10,11 ; int[] cells
EW.Durations=60,90 ; int[] frames, time to restore sensor after leaving supressor
EW.Lifetime=-1,-1
EW.Indiscriminate=false,false ; boolean[] enables logic while ally and owned sensors be supressed

[PROJECTILE_SENSOR_SUPRESSOR]
EW.Types=
EW.Targets=
EW.Radiuses=
EW.Durations=
EW.Lifetime=
EW.Indiscriminate=

[WARHEAD_SENSOR_SUPRESSOR]
EW.Types=
EW.Targets=
EW.Radiuses=
EW.Durations=
EW.Lifetime=
EW.Indiscriminate=

; Mind
[SOMETECHNO]
Trackable.Air=true ; boolean ?
Trackable.Ground=true ; boolean ?
Trackable.Subterannean=true ; ?
Trackable.ST_0.Air=false ; ?
Mind.Readable=true ;boolean